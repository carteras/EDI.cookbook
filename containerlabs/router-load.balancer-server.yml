name: router-switch-web-lab

topology:
  nodes:
    router:
      kind: linux
      image: frrouting/frr:latest
      binds:
        - ./routers/frr.conf:/etc/frr/frr.conf
      cmd: /usr/lib/frr/docker-start

    switch:
      kind: linux
      image: frrouting/frr:latest
      binds:
        - ./switches:/etc/frr
      cmd: sh /etc/frr/config.switch.sh


    web1:
      kind: linux
      image: alpine:latest
      binds:
        - ./servers/nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./servers/config.web1.sh:/config/config.web.sh
        
      # Installs nginx and runs it in the foreground to keep the container alive
      cmd: sh -c "apk add nginx && sh /config/config.web.sh"

    web2:
      kind: linux
      image: alpine:latest
      binds:
        - ./servers/nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./servers/config.web2.sh:/config/config.web.sh
        
      # Installs nginx and runs it in the foreground to keep the container alive
      cmd: sh -c "apk add nginx && sh /config/config.web.sh"


    loadbalancer:
      kind: linux
      image: alpine:latest
      binds:
        - ./servers/loadbalancer/haproxy.cfg:/etc/haproxy/haproxy.cfg
      cmd: sh -c "apk add haproxy && haproxy -f /etc/haproxy/haproxy.cfg"
      ports:
        - 8080:80


  links:
    - endpoints: ["router:eth1", "switch:eth1"]
    - endpoints: ["switch:eth2", "web1:eth1"]
    - endpoints: ["switch:eth3", "web2:eth1"]
    - endpoints: ["switch:eth4", "loadbalancer:eth1"]
